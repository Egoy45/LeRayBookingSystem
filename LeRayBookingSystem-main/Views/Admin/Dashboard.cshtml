@model LeRayBookingSystem.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    var appointmentsChartData = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AppointmentsByMonth);
    var salesChartData = Newtonsoft.Json.JsonConvert.SerializeObject(Model.SalesOverTime);
    var topServicesData = Newtonsoft.Json.JsonConvert.SerializeObject(Model.TopServices);
}

<h1 class="mb-4">Admin Dashboard</h1>
<hr />

<!-- Summary Cards -->
<div class="row text-center">
    <div class="col-md-3">
        <div class="card text-white bg-primary mb-3 shadow">
            <div class="card-body">
                <h5>Total Appointments</h5>
                <h2>@Model.TotalAppointments</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-warning mb-3 shadow">
            <div class="card-body">
                <h5>Pending</h5>
                <h2>@Model.PendingAppointments</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success mb-3 shadow">
            <div class="card-body">
                <h5>Approved</h5>
                <h2>@Model.ApprovedAppointments</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger mb-3 shadow">
            <div class="card-body">
                <h5>Cancelled</h5>
                <h2>@Model.CancelledAppointments</h2>
            </div>
        </div>
    </div>
</div>

<!-- Charts Section -->
<div class="row mt-4">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title text-center mb-3">📊 Monthly Appointments</h5>
                <canvas id="appointmentsChart" height="250"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title text-center mb-3">💰 Monthly Revenue</h5>
                <canvas id="salesChart" height="250"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Top Services Pie Chart -->
<div class="row mt-4">
    <div class="col-md-6 offset-md-3">
        <div class="card shadow-sm">
            <div class="card-body">
                <h5 class="card-title text-center mb-3">🥧 Top Services</h5>
                <canvas id="topServicesChart" height="280"></canvas>
            </div>
        </div>
    </div>
</div>

<hr />

<!-- Recent Appointments -->
<h4 class="mt-4">Recent Appointments</h4>
<table class="table table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>Client</th>
            <th>Service</th>
            <th>Date</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.RecentAppointments != null && Model.RecentAppointments.Any())
        {
            foreach (var appt in Model.RecentAppointments)
            {
                <tr>
                    <td>@appt.ClientName</td>
                    <td>@appt.ServiceName</td>
                    <td>@(appt.Date.HasValue? appt.Date.Value.ToString("MMM dd, yyyy hh:mm tt") : "N/A")</td>
                    <td>@appt.Status</td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="4" class="text-center">No recent appointments available.</td></tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // --- Data from backend
        const appointmentsData = @Html.Raw(appointmentsChartData ?? "[]");
        const salesData = @Html.Raw(salesChartData ?? "[]");
        const topServicesData = @Html.Raw(topServicesData ?? "[]");

        // --- Monthly Appointments (Bar Chart)
        const apptCtx = document.getElementById('appointmentsChart').getContext('2d');
        new Chart(apptCtx, {
            type: 'bar',
            data: {
                labels: appointmentsData.map(x => x.Month),
                datasets: [{
                    label: 'Appointments',
                    data: appointmentsData.map(x => x.Count),
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: 'Appointments Count' } },
                    x: { title: { display: true, text: 'Month' } }
                }
            }
        });

        // --- Monthly Sales (Line Chart)
        const salesCtx = document.getElementById('salesChart').getContext('2d');
        new Chart(salesCtx, {
            type: 'line',
            data: {
                labels: salesData.map(x => x.Month),
                datasets: [{
                    label: 'Revenue (₱)',
                    data: salesData.map(x => x.Revenue),
                    fill: true,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    tension: 0.3,
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Revenue (₱)' }
                    },
                    x: {
                        title: { display: true, text: 'Month' }
                    }
                }
            }
        });

        // --- Top Services (Pie Chart)
        const topCtx = document.getElementById('topServicesChart').getContext('2d');
        new Chart(topCtx, {
            type: 'pie',
            data: {
                labels: topServicesData.map(x => x.ServiceName),
                datasets: [{
                    label: 'Service Popularity',
                    data: topServicesData.map(x => x.AppointmentCount),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(255, 206, 86, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(153, 102, 255, 0.7)'
                    ],
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'bottom' }
                }
            }
        });
    </script>
}
